apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-test
  namespace: test-jobs
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: postgres-test
        image: postgres:15-alpine
        env:
        # All credentials come from the test secret
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: test-db-credentials
              key: POSTGRES_USER
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: test-db-credentials
              key: POSTGRES_PASSWORD
        - name: PGDATABASE
          valueFrom:
            secretKeyRef:
              name: test-db-credentials
              key: POSTGRES_DB
        - name: PGHOST
          value: "postgres.postgresql.svc.cluster.local"
        - name: PGPORT
          value: "5432"
        command:
        - /bin/sh
        - -c
        - |
          echo "=== PostgreSQL Connection Test ==="
          echo "Connecting to $PGHOST:$PGPORT as $PGUSER"
          
          # Wait for database to be ready
          until pg_isready; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          
          echo "✓ PostgreSQL is ready!"
          
          # Run comprehensive tests
          psql << 'EOF'
          -- Connection test
          SELECT version();
          
          -- Verify schema
          SELECT table_name FROM information_schema.tables 
          WHERE table_schema = 'public' 
          ORDER BY table_name;
          
          -- Test data operations
          INSERT INTO users (username, password_hash, email) 
          VALUES ('testuser', 'hash123', 'test@example.com')
          ON CONFLICT (username) DO NOTHING;
          
          INSERT INTO tasks (user_id, title, description, status) 
          VALUES (1, 'Test Task', 'Verify database works', 'pending')
          RETURNING id;
          
          -- Verify data
          SELECT COUNT(*) as user_count FROM users;
          SELECT COUNT(*) as task_count FROM tasks;
          
          -- Cleanup test data
          DELETE FROM tasks WHERE title = 'Test Task';
          DELETE FROM users WHERE username = 'testuser';
          
          \dt
          EOF
          
          echo "✓ All PostgreSQL tests passed!"