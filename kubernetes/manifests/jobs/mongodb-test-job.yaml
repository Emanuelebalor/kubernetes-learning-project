apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-test
  namespace: test-jobs
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: mongodb-test
        image: mongo:6.0
        env:
        - name: MONGO_HOST
          value: "mongodb.mongodb.svc.cluster.local"
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: test-db-credentials
              key: MONGODB_USER
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: test-db-credentials
              key: MONGODB_PASSWORD
        - name: MONGO_DATABASE
          valueFrom:
            secretKeyRef:
              name: test-db-credentials
              key: MONGODB_DB
        command:
        - /bin/sh
        - -c
        - |
          echo "=== MongoDB Connection Test ==="
          echo "Connecting to $MONGO_HOST as $MONGO_USERNAME"
          
          # Wait for MongoDB
          until mongosh --host $MONGO_HOST --eval "db.adminCommand('ping')" 2>/dev/null; do
            echo "Waiting for MongoDB to be ready..."
            sleep 2
          done
          
          echo "✓ MongoDB is ready!"
          
          # Run comprehensive tests
          mongosh --host $MONGO_HOST \
                  --username "$MONGO_USERNAME" \
                  --password "$MONGO_PASSWORD" \
                  --authenticationDatabase "$MONGO_DATABASE" \
                  "$MONGO_DATABASE" << 'EOF'
          
          print("=== Testing MongoDB ===");
          
          // List collections
          print("\nCollections:");
          db.getCollectionNames().forEach(function(name) {
              print("- " + name);
          });
          
          // Test operations
          db.notifications.insertOne({
              userId: 1,
              taskId: 1,
              message: "Test notification",
              type: "task_created",
              status: "pending",
              createdAt: new Date()
          });
          
          let count = db.notifications.countDocuments();
          print("\nNotification count: " + count);
          
          // Cleanup
          db.notifications.deleteMany({message: "Test notification"});
          
          print("\n✓ All MongoDB tests passed!");
<<<<<<< HEAD
          EOF
          
          echo "✓ MongoDB test completed successfully!"
=======
          EOF
>>>>>>> 55fdf52 (added python auth app and jobs for testing deployments)
